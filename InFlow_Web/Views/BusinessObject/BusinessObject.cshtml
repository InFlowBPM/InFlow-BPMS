@model strICT.InFlow.Web.Models.ViewBOModel




<div id="bocontainer">

    @if (Model.BObjectErrors != null)
    {
        <p><b>Validation Errors:</b></p>
        <ul>


            @foreach(var i in Model.BObjectErrors)
            {
                <li>@i</li>
            }
        </ul>

    <hr />
    }

    

    @using (Html.BeginForm("SubmitBusinessObject", "BusinessObject", new { id = Model.BObjectIdentifier, taskId = ViewBag.TaskId }, FormMethod.Post, new { }))
    {

        @Html.Raw(Model.ViewData)

        <br />

        <a href="#" class="btn btn-default" onclick="closeBo(this)">Close</a>
        if (!Model.ReadOnly)
        {

     
            <input type="button" value="Submit" onclick="DoAjaxPostAndMore(this)" class="btn btn-default" />
        }

    }

    <script type="text/javascript">
    function validatenumber(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]|\.|\,/;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }

    function validateinteger(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]/;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }

    </script>
   
</div>