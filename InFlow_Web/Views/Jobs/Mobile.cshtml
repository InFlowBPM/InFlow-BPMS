@{
    Layout = null;

}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>InFlow - @ViewBag.Title</title>


    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")


</head>
<body style="padding-top: 0; padding-bottom: 0">
    <div id="TaskDetail">
    </div>

    <div id="bopanel" class="panel panel-default" style="display:none">
        <div class="panel-heading">
        </div>
        <div class="panel-body">
            <div id="bocontent"> </div>
        </div>
    </div>




    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        $.ajaxSetup({ cache: false });
    </script>

    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>


    @Scripts.Render("~/bundles/jqueryval")


    @if (ViewBag.Id > 0)
    {
        <script type="text/javascript">
            var URL = '@Url.Action("NewProcess", "Jobs", null, Request.Url.Scheme)';
            URL = URL.replace('NewProcess', '');
            var id = '@ViewBag.Id';

            $(document).ready(function () {
                $.ajax({
                    cache: false,
                    url: URL + "/_State",
                    data: { id: id, mode: "mobile" },
                    type: 'GET',
                    success: function (data) {
                        $('#TaskDetail').html(data);
                    }
                });
            });
        </script>
    }

    <script type="text/javascript">
        function validatenumber(evt) {
            var theEvent = evt || window.event;
            var key = theEvent.keyCode || theEvent.which;
            key = String.fromCharCode(key);
            var regex = /[0-9]|\.|\,/;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }

        function validateinteger(evt) {
            var theEvent = evt || window.event;
            var key = theEvent.keyCode || theEvent.which;
            key = String.fromCharCode(key);
            var regex = /[0-9]/;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }



        function showBO(link) {
            $("#bocontent").load(link, function (responseTxt, statusTxt, xhr) {
                if (statusTxt == "success") {
                    $("#TaskDetail").hide();
                    $("#bopanel").show();
                }
                if (statusTxt == "error")
                    alert("Error: " + xhr.status + ": " + xhr.statusText + " ... " + link);
            });
        }


        function DoAjaxPostAndMore(btnClicked) {
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                    alert("errro");
                },
                success: function (response) {
                    
                    $("#TaskDetail").show();
                    $("#bopanel").hide();

                   // $('#bocontainer').replaceWith(response)
                }
            });
            return false;// if it's a link to prevent post
        }

        function closeBo(btnClicked) {
            $("#TaskDetail").show();
            $("#bopanel").hide();
        }
    </script>
</body>
</html>